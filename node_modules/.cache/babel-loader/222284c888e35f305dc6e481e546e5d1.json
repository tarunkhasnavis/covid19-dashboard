{"ast":null,"code":"var _jsxFileName = \"/Users/tarun/Desktop/covid-19-tracker/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][data];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all?lastdays=120\").then(response => response.json()).then(data => {\n      const chartData = buildChartData(data, \"cases\");\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/tarun/Desktop/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","length","datasets","backgroundColor","borderColor","options"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAC,OAAjB,KAA6B;AAChD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EAA6B;AACzB,UAAIF,aAAJ,EAAmB;AACf,cAAMG,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEH,IADc;AAEjBI,UAAAA,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACH;;AACDH,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBH,IAAhB,CAAhB;AACH;;AACD,WAAOI,SAAP;AACH,GAdD;;AAgBAP,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMb,IAAI,IAAI;AACV,YAAMI,SAAS,GAAGF,cAAc,CAACF,IAAD,EAAO,OAAP,CAAhC;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,cACC,CAAAJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEgB,MAAN,IAAe,CAAf,iBACC,QAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,eAAe,EAAE,wBADnB;AAEEC,UAAAA,WAAW,EAAE,SAFf;AAGEnB,UAAAA,IAAI,EAAEA;AAHR,SADQ;AADN,OADR;AAUE,MAAA,OAAO,EAAEoB;AAVX;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA9CQrB,S;;KAAAA,S;AAgDT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineGraph() {\n    const [data, setData] = useState({});\n\n    const buildChartData = (data, casesType='cases') => {\n        const chartData = [];\n        let lastDataPoint;\n        for (let date in data.cases) {\n            if (lastDataPoint) {\n                const newDataPoint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint);\n            }\n            lastDataPoint = data[casesType][data];\n        }\n        return chartData;\n    }\n\n    useEffect(() => {\n        fetch(\"https://disease.sh/v3/covid-19/all?lastdays=120\")\n        .then(response => response.json())\n        .then(data => {\n            const chartData = buildChartData(data, \"cases\");\n            setData(chartData);\n        });\n    }, []);\n\n    return (\n        <div>\n        {data?.length > 0 && (\n          <Line\n            data={{\n              datasets: [\n                {\n                  backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                  borderColor: \"#CC1034\",\n                  data: data,\n                },\n              ],\n            }}\n            options={options}\n          />\n        )}\n      </div>\n    );\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}