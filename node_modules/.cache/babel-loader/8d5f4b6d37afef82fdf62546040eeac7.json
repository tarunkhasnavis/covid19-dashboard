{"ast":null,"code":"var _jsxFileName = \"/Users/tarun/Desktop/covid-19-tracker/src/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = (data, casesType = 'cases') => {\n    const chartData = [];\n    let lastDataPoint;\n    data.cases.forEach(date => {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][data];\n    });\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all?lastdays=120\").then(response => response.json()).then(data => {\n      const chartData = buildChartData(data);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Im a graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/Users/tarun/Desktop/covid-19-tracker/src/LineGraph.js"],"names":["React","useState","useEffect","Line","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","cases","forEach","date","newDataPoint","x","y","push","fetch","then","response","json","datasets"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,cAAc,GAAG,CAACF,IAAD,EAAOG,SAAS,GAAC,OAAjB,KAA6B;AAChD,UAAMC,SAAS,GAAG,EAAlB;AACA,QAAIC,aAAJ;AACAL,IAAAA,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAmBC,IAAI,IAAI;AACvB,UAAIH,aAAJ,EAAmB;AACf,cAAMI,YAAY,GAAG;AACjBC,UAAAA,CAAC,EAAEF,IADc;AAEjBG,UAAAA,CAAC,EAAEX,IAAI,CAACG,SAAD,CAAJ,CAAgBK,IAAhB,IAAwBH;AAFV,SAArB;AAIAD,QAAAA,SAAS,CAACQ,IAAV,CAAeH,YAAf;AACH;;AACDJ,MAAAA,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBH,IAAhB,CAAhB;AACH,KATD;AAUA,WAAOI,SAAP;AACH,GAdD;;AAgBAP,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,KAAK,CAAC,iDAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMd,IAAI,IAAI;AACV,YAAMI,SAAS,GAAGF,cAAc,CAACF,IAAD,CAAhC;AACAC,MAAAA,OAAO,CAACG,SAAD,CAAP;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAI;AACVa,QAAAA,QAAQ,EAAE,CAAC;AACPjB,UAAAA,IAAI,EAAEA;AADC,SAAD;AADA;AAAd;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAtCQD,S;;KAAAA,S;AAwCT,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from \"react-chartjs-2\";\n\nfunction LineGraph() {\n    const [data, setData] = useState({});\n\n    const buildChartData = (data, casesType='cases') => {\n        const chartData = [];\n        let lastDataPoint;\n        data.cases.forEach(date => {\n            if (lastDataPoint) {\n                const newDataPoint = {\n                    x: date,\n                    y: data[casesType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint);\n            }\n            lastDataPoint = data[casesType][data];\n        })\n        return chartData;\n    }\n\n    useEffect(() => {\n        fetch(\"https://disease.sh/v3/covid-19/all?lastdays=120\")\n        .then(response => response.json())\n        .then(data => {\n            const chartData = buildChartData(data);\n            setData(chartData);\n        })\n    }, []);\n\n    return (\n        <div>\n            <h1>Im a graph</h1>\n            <Line data = {{\n                datasets: [{\n                    data: data\n                }]\n            }}/>\n        </div>\n    )\n}\n\nexport default LineGraph\n"]},"metadata":{},"sourceType":"module"}